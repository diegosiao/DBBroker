<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssemblyNotFound" xml:space="preserve">
    <value>O namespace informado '{0}' não foi achado no contexto da aplicação. </value>
  </data>
  <data name="DBBrokerConfigConnStrNotFound" xml:space="preserve">
    <value>Uma 'Connection String' não foi encontrada para o namespace '{0}'. </value>
  </data>
  <data name="DBBrokerConfigDatabaseOption" xml:space="preserve">
    <value>Informe 'SQLServer' ou 'MySQL' como a engine escolhida (MySQL não suportado completamente).</value>
  </data>
  <data name="DBBrokerConfigFileAlreadyEncripted" xml:space="preserve">
    <value>O arquivo 'DBBroker.config' já foi criptografado.</value>
  </data>
  <data name="DBBrokerConfigFileFormat" xml:space="preserve">
    <value>Cada linha do arquivo DBBroker.config precisa estar no formato: 'Namespace|SQLServer [ou] MySQL|Connection String'. Ex.: MyApp.Domain|SQLServer|Data Source=(local); User Id=sa; Password=SuperSenha; Initial Catalog=database;</value>
  </data>
  <data name="DBBrokerConfigFileNotFound" xml:space="preserve">
    <value>O arquivo de configuração 'DBBroker.config' não foi encontrado em '{0}'. </value>
  </data>
  <data name="DBBrokerConfigInfoIncomplete" xml:space="preserve">
    <value>Informe as linhas do arquivo de configuração como elementos do array. Array nulo ou vazio. </value>
  </data>
  <data name="DBBrokerScriptMessage" xml:space="preserve">
    <value> /* Gerado sem garantia por cortesia de DBBroker */
 /* ============================================ */
 /* Por que não nos pagar um cafezinho em www.getdbbroker.com? */
 /* Doações via PagSeguro ou PayPal... é rápido e seguro ;) */
 /* Criação: {0} */

 /* [!]
    - REVISE ESTE SCRIPT;
    - LEMBRE-SE DE CRIAR OU SETAR O BANCO DE DADOS APROPRIADO NO CONTEXTO ANTES DE EXECUTAR ESTE SCRIPT;
 */</value>
  </data>
  <data name="EncryptionPasswordInvalid" xml:space="preserve">
    <value>O formato do arquivo criptografado DBBroker.config está inválido. Tenha certeza de estar informando a mesma senha de criptografia usada para criá-lo (Configuration.EncryptionPassword).</value>
  </data>
  <data name="EncryptionPasswordNull" xml:space="preserve">
    <value>A senha de criptografia não pode ser nula ou ter menos que 6 caracteres na propriedade 'Configuration.EncryptionPassword' quando o arquivo de configuração DBBroker.config está criptografado.</value>
  </data>
  <data name="ErrorBadList" xml:space="preserve">
    <value>A lista mapeada '{0}' precisa ser do tipo 'System.Collections.Generic.List'. </value>
  </data>
  <data name="ErrorConfigFileHasNoSuchLine" xml:space="preserve">
    <value>O arquivo DBBroker.config não tem a linha '{0}'. Este arquivo tem '{1}' linha(s).</value>
  </data>
  <data name="ErrorConfigurationContextRequired" xml:space="preserve">
    <value>O contexto de configuração não pode ser nulo.</value>
  </data>
  <data name="ErrorExecutingSqlCommand" xml:space="preserve">
    <value>A execução do script SQL falhou. {0} SQL: '{1}'. (Mensagem restrita enquanto debugando)</value>
  </data>
  <data name="ErrorIdValueNotValid" xml:space="preserve">
    <value>O valor encontrado em {0} para a propriedade 'Id' não é um inteiro válido. </value>
  </data>
  <data name="ErrorIncompleteMap" xml:space="preserve">
    <value>Informe a tabela e chave primária para '{0}' usando o atributo [DBMappedClass] nessa classe. </value>
  </data>
  <data name="ErrorLoadingProp" xml:space="preserve">
    <value>Falha durante a carga da propriedade '{0}.{1}'. {2}. </value>
  </data>
  <data name="ErrorMappedListCheckMapping" xml:space="preserve">
    <value>Please check the attribute [DBMappedList] values in property '{0}.{1}'.  Something is wrong.</value>
  </data>
  <data name="ErrorMappedListInfo" xml:space="preserve">
    <value>Informe todas as propriedades do atributo [MappedList] em '{0}.{1}'.</value>
  </data>
  <data name="ErrorMappedListUsage" xml:space="preserve">
    <value>A propriedade '{0}.{1}' precisa ser de um tipo que implemente 'IList'</value>
  </data>
  <data name="ErrorMessageDefault" xml:space="preserve">
    <value>Desculpe... Algo não funcionou como esperado. </value>
  </data>
  <data name="ErrorMissingIdProp" xml:space="preserve">
    <value>Toda classe mapeada precisa de uma propriedade 'Id' do tipo integer. A classe '{0}' não tem.</value>
  </data>
  <data name="ErrorMultipleDatabases" xml:space="preserve">
    <value>O DBBroker não permite mais de um mecanismo de banco (SQLServer e MySQL) no mesmo contexto. Isso seria uma bagunça. </value>
  </data>
  <data name="ErrorNamespaceAlreadyInformed" xml:space="preserve">
    <value>O namespace '{0}' aparece mais de uma vez no arquivo DBBroker.config.</value>
  </data>
  <data name="ErrorNamespaceNotFound" xml:space="preserve">
    <value>O namespace '{0}' não foi especificado no arquivo DBBroker.config</value>
  </data>
  <data name="ErrorSavingObject" xml:space="preserve">
    <value>Algo deu errado ao salvar os dados para '{0}'. </value>
  </data>
  <data name="ErrorScriptMultipleNamespacesMapped" xml:space="preserve">
    <value>Existe mais de um namespace mapeado. Use o construtor de ScriptGenerator em que é possível especificar o namespace. </value>
  </data>
  <data name="ErrorTranAssociatedConnectionNull" xml:space="preserve">
    <value>A transação especificada tem uma conexão inválida. </value>
  </data>
  <data name="ErrorUnableToConnect" xml:space="preserve">
    <value>It was not possible to connect to the database. </value>
  </data>
  <data name="ErrorUnexpectedNullProp" xml:space="preserve">
    <value>Erro interno. [581]</value>
  </data>
  <data name="MultipleAssembliesWithSameNamespace" xml:space="preserve">
    <value>Existe mais de um assembly no contexto com o namespace '{0}'. </value>
  </data>
  <data name="NullOrEmptyColumnName" xml:space="preserve">
    <value>O nome da coluna não pode ser nulo ou vazio. </value>
  </data>
  <data name="Unnamed" xml:space="preserve">
    <value>Anônima</value>
  </data>
  <data name="WarningPropertyNotMapped" xml:space="preserve">
    <value>ATENÇÃO: A propriedade '{0}' não foi mapeada. Tipo não pode ser convertido: {1}</value>
  </data>
  <data name="WarningTransactionNotCommited" xml:space="preserve">
    <value>Certifique-se de invocar o 'Commit' da transação informada</value>
  </data>
</root>