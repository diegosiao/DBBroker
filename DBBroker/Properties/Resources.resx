<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AssemblyNotFound" xml:space="preserve">
    <value>The informed namespace '{0}' was not found in the application context. </value>
  </data>
  <data name="DBBrokerConfigConnStrNotFound" xml:space="preserve">
    <value>A corresponding ConnectionString was not found to the namespace '{0}'. </value>
  </data>
  <data name="DBBrokerConfigDatabaseOption" xml:space="preserve">
    <value>As database option, you need to inform 'SQLServer' or 'MySQL' (MySQL not fully supported).</value>
  </data>
  <data name="DBBrokerConfigFileAlreadyEncripted" xml:space="preserve">
    <value>The 'DBBroker.config' is already encrypted.</value>
  </data>
  <data name="DBBrokerConfigFileFormat" xml:space="preserve">
    <value>Every line of the DBBroker.config file must have the format: 'My.Namespace|{SQLServer or MySQL}|ConnectionString'. </value>
  </data>
  <data name="DBBrokerConfigFileNotFound" xml:space="preserve">
    <value>The DBBroker.config configuration file was not found in '{0}'. </value>
  </data>
  <data name="DBBrokerConfigInfoIncomplete" xml:space="preserve">
    <value>Please inform lines of the configuration file as elements of the array. Array null or empty.</value>
  </data>
  <data name="DBBrokerScriptMessage" xml:space="preserve">
    <value> /* Generated as a courtesy without warranty by DBBroker */
 /* ==================================================== */
 /* Why not paying a coffee for us at www.getdbbroker.com? */
 /* We need your help to keep moving. */
 /* Donations via PayPal - quick and safe ;) */
 /* Creation: {0} */

 /* [!]
   - REMEMBER TO CREATE OR SET THE PROPER DATABASE CONTEXT BEFORE YOU RUN THIS SCRIPT;
   - REVISE THIS SCRIPT;
 */</value>
  </data>
  <data name="EncryptionPasswordInvalid" xml:space="preserve">
    <value>The format of the encrypted DBBroker.config file is invalid. Make sure you are using the same password used to create it (Configuration.EncryptionPassword).</value>
  </data>
  <data name="EncryptionPasswordNull" xml:space="preserve">
    <value>The encryption password in property 'Configuration.EncryptionPassword' cannot be null or shorter than 6 characters when working with encrypted DBBroker.config file.</value>
  </data>
  <data name="ErrorBadList" xml:space="preserve">
    <value>The property '{0}' needs to be of type 'System.Collections.Generic.List'.</value>
  </data>
  <data name="ErrorConfigFileHasNoSuchLine" xml:space="preserve">
    <value>The DBBroker.config file has does not have the line '{0}'. It has '{1}' line(s).</value>
  </data>
  <data name="ErrorConfigurationContextRequired" xml:space="preserve">
    <value>The configuration context cannot be null.</value>
  </data>
  <data name="ErrorExecutingSqlCommand" xml:space="preserve">
    <value>The execution of the SQL script failed. {0} SQL: '{1}'. (That message is restrict to debugging)</value>
  </data>
  <data name="ErrorIdValueNotValid" xml:space="preserve">
    <value>The value found in {0} to 'Id' property is invalid integer. </value>
  </data>
  <data name="ErrorIncompleteMap" xml:space="preserve">
    <value>Please inform the corresponding table and primary key to the class '{0}' using the [DBMappedClass] attribute in this class. </value>
  </data>
  <data name="ErrorLoadingProp" xml:space="preserve">
    <value>Fail during the load of property '{0}.{1}'. {2}. </value>
  </data>
  <data name="ErrorMappedListCheckMapping" xml:space="preserve">
    <value>Por favor, verifique os valores do atributo [DBMappedList] na propriedade '{0}.{1}'.  Há algo errado.</value>
  </data>
  <data name="ErrorMappedListInfo" xml:space="preserve">
    <value>Please inform all properties of the attribute [DBMappedList] of '{0}.{1}'.</value>
  </data>
  <data name="ErrorMappedListUsage" xml:space="preserve">
    <value>The property '{0}.{1}' must be of type 'System.Collections.Generic.List' </value>
  </data>
  <data name="ErrorMessageDefault" xml:space="preserve">
    <value>Oops... Something went wrong during a try of recovering data. </value>
  </data>
  <data name="ErrorMissingIdProp" xml:space="preserve">
    <value>Every mapped class need a 'Id' integer property. The class '{0}' does not have it. </value>
  </data>
  <data name="ErrorMultipleDatabases" xml:space="preserve">
    <value>Wow... DBBroker does not allow multiple databases mechanisms (SQLServer and MySQL) in the same context. That would be a mess.</value>
  </data>
  <data name="ErrorNamespaceAlreadyInformed" xml:space="preserve">
    <value>The namespace '{0}' appears more than once in DBBroker.config file.</value>
  </data>
  <data name="ErrorNamespaceNotFound" xml:space="preserve">
    <value>The namespace '{0}' was not specified in the file DBBroker.config</value>
  </data>
  <data name="ErrorSavingObject" xml:space="preserve">
    <value>Something went wrong while saving the data to '{0}'. </value>
  </data>
  <data name="ErrorScriptMultipleNamespacesMapped" xml:space="preserve">
    <value>There is more than one mapped namespaces. Please use the ScriptGenerator constructor where you can specify a namespace. </value>
  </data>
  <data name="ErrorTranAssociatedConnectionNull" xml:space="preserve">
    <value>The transaction specified has an invalid connection. </value>
  </data>
  <data name="ErrorUnableToConnect" xml:space="preserve">
    <value>It was not possible to connect to the database. </value>
  </data>
  <data name="ErrorUnexpectedNullProp" xml:space="preserve">
    <value>Internal unexpected error. [581]</value>
  </data>
  <data name="MultipleAssembliesWithSameNamespace" xml:space="preserve">
    <value>There is more than one assembly in context with the namespace '{0}'. </value>
  </data>
  <data name="NullOrEmptyColumnName" xml:space="preserve">
    <value>The column name cannot be null or empty. </value>
  </data>
  <data name="Unnamed" xml:space="preserve">
    <value>Unnamed</value>
  </data>
  <data name="WarningPropertyNotMapped" xml:space="preserve">
    <value>WARNING: The property '{0}' was not mapped. Type not convertible: {1}</value>
  </data>
  <data name="WarningTransactionNotCommited" xml:space="preserve">
    <value>Make sure you commit the external transaction informed.</value>
  </data>
</root>